---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
  - "@MC_STATES_DEFAULT_INSTALL_PREFIX@"
  - "@BWC_STATES_LIBRARIES@"
  - "@STATES_INSTALL_PREFIX@/@PROJECT_NAME@/states"
# Where to look for state files
StatesFiles:
  - "@MC_STATES_DEFAULT_INSTALL_PREFIX@/data"
  - "@BWC_STATES_FILES@"
  - "@STATES_INSTALL_PREFIX@/@PROJECT_NAME@/states/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# General constraints, always on
constraints:
  - type: contact
  - type: kinematics
    damper: [0.1, 0.01, 0.5]
  - type: compoundJoint
# Collision constraint
collisions:
  - type: collision
    useMinimal: true
# Initial set of contacts
contacts: []

# Implement some additional text states
states:
  LMC::Initial_:
    base: LMC::Initial
    configs:
      gripperCommands:
        - name: l_gripper
          opening: 1.0
        - name: r_gripper
          opening: 1.0

  LMC::GuiManip_:
    base: LMC::GuiManip

  LMC::Teleop_:
    base: LMC::Teleop
    configs:
      twistTopicName: /cmd_vel

  LMC::Main_:
    base: Parallel
    states: [LMC::GuiManip_, LMC::Teleop_]

# Transitions map
transitions:
  - [LMC::Initial_, OK, LMC::Main_, Auto]
# Initial state
init: LMC::Initial_

ObserverPipelines:
  name: MainObserverPipeline
  gui: true
  observers:
    - type: Encoder
    - type: Attitude
      config:
        KalmanFilter:
          gyr_cov: 1e-6
    - type: KinematicInertial
      config:
        anchorFrame:
          maxAnchorFrameDiscontinuity: 0.05 # [m]

controllerName: LMC

PostureTask:
  stiffness: 10

CoMTask:
  type: com
  stiffness: [1000.0, 1000.0, 1000.0]
  weight: 1000.0

BaseOrientationTask:
  type: orientation
  stiffness: 300.0
  weight: 500.0

FootTaskList:
  - type: firstOrderImpedance
    foot: Left
    frame: LeftFootCenter
    cutoffPeriod: 0.01
    stiffness: 1000.0
    weight: 1000.0
  - type: firstOrderImpedance
    foot: Right
    frame: RightFootCenter
    cutoffPeriod: 0.01
    stiffness: 1000.0
    weight: 1000.0

HandTaskList:
  - type: impedance
    hand: Left
    frame: LeftGripper
    stiffness: 1000.0
    weight: 1000.0
  - type: impedance
    hand: Right
    frame: RightGripper
    stiffness: 1000.0
    weight: 1000.0

FootManager:
  name: FootManager
  footstepDuration: 0.8 # [sec]
  doubleSupportRatio: 0.125 # []
  deltaTransLimit: [0.15, 0.1, 12.5] # (x [m], y [m], theta [deg])
  midToFootTranss:
    Left:
      translation: [0, 0.105, 0] # [m]
    Right:
      translation: [0, -0.105, 0] # [m]
  zmpHorizon: 3.0 # [sec]
  zmpOffset: [0, -0.02, 0] # (positive for x-forward, y-outside, z-upward) [m]
  defaultSwingTrajType: IndHorizontalVertical
  overwriteLandingPose: false
  stopSwingTrajForTouchDownFoot: true
  keepPoseForTouchDownFoot: false
  enableWrenchDistForTouchDownFoot: true
  enableArmSwing: false
  fricCoeff: 0.5
  touchDownRemainingDuration: 0.2 # [sec]
  touchDownPosError: 0.02 # [m]
  touchDownForceZ: 100 # [N]
  impedanceGains:
    SingleSupport:
      damper:
        linear: [300, 300, 300]
        angular: [100, 100, 100]
      spring:
        linear: [2250, 2250, 2250]
        angular: [0, 0, 2000]
      wrench:
        linear: [0, 0, 0]
        angular: [1, 1, 0]
    DoubleSupport:
      damper:
        linear: [300, 300, 1e4]
        angular: [100, 100, 100]
      spring:
        linear: [2250, 2250, 0]
        angular: [0, 0, 2000]
      wrench:
        linear: [0, 0, 1]
        angular: [1, 1, 0]
    Swing:
      damper:
        linear: [300, 300, 300]
        angular: [40, 40, 40]
      spring:
        linear: [2250, 2250, 2250]
        angular: [400, 400, 400]
      wrench:
        linear: [0, 0, 0]
        angular: [0, 0, 0]
  VelMode:
    footstepQueueSize: 3
    enableOnlineFootstepUpdate: false
  SwingTraj:
    CubicSplineSimple:
      withdrawDurationRatio: 0.25
      withdrawOffset: [0, 0, 0.123] # [m]
      approachDurationRatio: 0.25
      approachOffset: [0, 0, 0.987] # [m]
      swingOffset: [0, 0, 0.05] # [m]
    IndHorizontalVertical:
      withdrawDurationRatio: 0.25
      approachDurationRatio: 0.25
      verticalTopDurationRatio: 0.5
      verticalTopOffset: [0, 0, 0.05] # [m]
      tiltAngleWithdraw: 0 # [deg]
      tiltAngleApproach: 0 # [deg]
      tiltAngleWithdrawDurationRatio: 0.25
      tiltAngleApproachDurationRatio: 0.25
      tiltCenterWithdrawDurationRatio: 0.25
      tiltCenterApproachDurationRatio: 0.25
      tiltDistThre: 0.1 # [m]
      tiltForwardAngleThre: 100 # [deg]

ManipManager:
  name: ManipManager
  objHorizon: 3.0 # [sec]
  objPoseTopic: /object/pose
  objVelTopic: /object/vel
  handTaskStiffness: 1000.0
  handTaskStiffnessInterpDuration: 4.0 # [sec]
  preReachDuration: 2.0 # [ec]
  reachDuration: 1.5 # [sec]
  reachHandDistThre: 0.5 # [m]
  objToHandTranss:
    Left:
      translation: [-0.35, 0.3, 1.0] # [m]
      # e.Quaterniond(e.AngleAxisd(np.pi, e.Vector3d.UnitX()).toRotationMatrix() * e.AngleAxisd(np.pi/2, e.Vector3d.UnitZ()).toRotationMatrix() * e.AngleAxisd(np.deg2rad(75), e.Vector3d.UnitX()).toRotationMatrix()).inverse()
      rotation: [-0.430459, -0.560986, 0.560986, -0.430459]
    Right:
      translation: [-0.35, -0.3, 1.0] # [m]
      # e.Quaterniond(e.AngleAxisd(np.pi, e.Vector3d.UnitX()).toRotationMatrix() * e.AngleAxisd(-np.pi/2, e.Vector3d.UnitZ()).toRotationMatrix() * e.AngleAxisd(np.deg2rad(-75), e.Vector3d.UnitX()).toRotationMatrix()).inverse()
      rotation: [0.430459, -0.560986, -0.560986, -0.430459]
  preReachTranss:
    Left:
      translation: [0, 0, -0.1] # [m]
    Right:
      translation: [0, 0, -0.1] # [m]
  impedanceGain:
    mass:
      angular: [2.0, 2.0, 2.0]
      linear: [10.0, 10.0, 10.0]
    damper:
      angular: [200.0, 200.0, 200.0]
      linear: [1000.0, 1000.0, 1000.0]
    spring:
      angular: [200.0, 200.0, 200.0]
      linear: [1000.0, 1000.0, 1000.0]
    wrench:
      angular: [0.0, 0.0, 0.0]
      linear: [1.0, 1.0, 1.0]
  graspCommands:
    - name: l_gripper
      opening: 0.0
    - name: r_gripper
      opening: 0.0
  ungraspCommands:
    - name: l_gripper
      opening: 1.0
    - name: r_gripper
      opening: 1.0
  objToFootMidTrans:
    translation: [-0.65, 0, 0] # [m]
  footstepDuration: 1.0 # [sec]
  doubleSupportRatio: 0.2 # [sec]
  VelMode:
    nonholonomicObjectMotion: true

CentroidalManager:
  name: CentroidalManager
  useActualStateForMpc: false
  enableZmpFeedback: true
  enableComZFeedback: true
  dcmGainP: 2.0 # It must be greater than 1 to be stable
  zmpVelGain: 0.02
  comZGainP: 2000.0
  comZGainD: 500.0
  refComZ: 0.825 # [m]
  useTargetPoseForControlRobotAnchorFrame: true
  useActualComForWrenchDist: false
  wrenchDistConfig:
    wrenchWeight:
      linear: [1.0, 1.0, 1.0]
      angular: [1.0, 1.0, 1.0]
    regularWeight: 1e-8
    ridgeForceMinMax: [3, 1000] # [N]

  # PreviewControlZmp
  method: PreviewControlZmp
  horizonDuration: 2.0 # [sec]
  horizonDt: 0.005 # [sec]


# OverwriteConfigKeys: [NoSensors]

OverwriteConfigList:
  NoSensors:
    FootManager:
      impedanceGains:
        SingleSupport:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]
        DoubleSupport:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]
        Swing:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]

    ManipManager:
      impedanceGain:
        wrench:
          angular: [0.0, 0.0, 0.0]
          linear: [0.0, 0.0, 0.0]

    CentroidalManager:
      useActualStateForMpc: false
      enableZmpFeedback: false
      useActualComForWrenchDist: false

robots:
  # Environment models
  ground:
    module: env/ground

  obj:
    module: LMC/Cart
    init_pos:
      translation: [1.0, 0.0, 0.0]

  # Robot-specific configurations
  jvrc1:
    PostureTask:
      target:
        R_SHOULDER_P: [0.3490658503988659] # 20
        R_SHOULDER_R: [-0.4363323129985824] # -25
        R_ELBOW_P: [-1.5707963267948966] # -90
        L_SHOULDER_P: [0.3490658503988659] # 20
        L_SHOULDER_R: [0.4363323129985824] # 25
        L_ELBOW_P: [-1.5707963267948966] # -90
      jointWeights:
        WAIST_R: 100
        WAIST_P: 100
        WAIST_Y: 100

    CoMTask:
      activeJoints: [
      "Root",
      "R_HIP_Y", "R_HIP_R", "R_HIP_P", "R_KNEE", "R_ANKLE_P", "R_ANKLE_R",
      "L_HIP_Y", "L_HIP_R", "L_HIP_P", "L_KNEE", "L_ANKLE_P", "L_ANKLE_R"]

    BaseOrientationTask:
      frame: WAIST_R_S
